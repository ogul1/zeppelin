# Disable keepAlive and pool
# https://github.com/actions/virtual-environments/issues/1499#issuecomment-689467080

name: Modified frontend
env:
  MAVEN_OPTS: -Xms1024M -Xmx2048M -XX:MaxMetaspaceSize=1024m -XX:-UseGCOverheadLimit
    -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3
  MAVEN_ARGS: -B --no-transfer-progress
  ZEPPELIN_HELIUM_REGISTRY: helium
  SPARK_PRINT_LAUNCH_COMMAND: 'true'
  SPARK_LOCAL_IP: 127.0.0.1
  ZEPPELIN_LOCAL_IP: 127.0.0.1
  INTERPRETERS: '!hbase,!jdbc,!file,!flink,!cassandra,!elasticsearch,!bigquery,!alluxio,!livy,!groovy,!java,!neo4j,!sparql,!mongodb'
permissions:
  contents: read
jobs:
  run-e2e-tests-in-zeppelin-web:
    runs-on: ubuntu-20.04
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-run-e2e-tests-in-zeppelin-web.csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/zeppelin/zeppelin', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - name: Checkout
      uses: actions/checkout@v4
    - run: touch optcd-3.txt
    - name: Tune Runner VM
      uses: ./.github/actions/tune-runner-vm
    - run: touch optcd-4.txt
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 11
    - run: touch optcd-5.txt
    - name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        path: |-
          ~/.m2/repository
          !~/.m2/repository/org/apache/zeppelin/
          ~/.spark-dist
          ~/.cache
        key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
        restore-keys: |-
          ${{ runner.os }}-zeppelin-
    - run: touch optcd-6.txt
    - name: Install application
      run: ./mvnw clean install -DskipTests -am -pl zeppelin-web -Pweb-classic -Pspark-scala-2.12
        -Pspark-3.4 -Pweb-dist ${MAVEN_ARGS}
    - run: touch optcd-7.txt
    - name: Run headless test
      run: xvfb-run --auto-servernum --server-args="-screen 0 1024x768x24" ./mvnw
        verify -pl zeppelin-web -Pweb-classic -Pspark-scala-2.12 -Pspark-3.4 -Pweb-dist
        -Pweb-e2e ${MAVEN_ARGS}
    - run: touch optcd-8.txt
    - name: Print zeppelin logs
      run: if [ -d "logs" ]; then cat logs/*; fi
    - run: touch optcd-9.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-run-e2e-tests-in-zeppelin-web
        path: /home/runner/inotifywait-log-run-e2e-tests-in-zeppelin-web.csv
    name: run-e2e-tests-in-zeppelin-web
  run-tests-in-zeppelin-web-angular:
    runs-on: ubuntu-20.04
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-run-tests-in-zeppelin-web-angular.csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/zeppelin/zeppelin', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - name: Checkout
      uses: actions/checkout@v4
    - run: touch optcd-3.txt
    - name: Tune Runner VM
      uses: ./.github/actions/tune-runner-vm
    - run: touch optcd-4.txt
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 11
    - run: touch optcd-5.txt
    - name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        path: |-
          ~/.m2/repository
          !~/.m2/repository/org/apache/zeppelin/
          ~/.spark-dist
          ~/.cache
        key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
        restore-keys: |-
          ${{ runner.os }}-zeppelin-
    - run: touch optcd-6.txt
    - name: Run headless test
      run: xvfb-run --auto-servernum --server-args="-screen 0 1024x768x24" ./mvnw
        package -pl zeppelin-web-angular ${MAVEN_ARGS}
    - run: touch optcd-7.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-run-tests-in-zeppelin-web-angular
        path: /home/runner/inotifywait-log-run-tests-in-zeppelin-web-angular.csv
    name: run-tests-in-zeppelin-web-angular
  test-selenium-with-spark-module-for-spark-3-4:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-test-selenium-with-spark-module-for-spark-3-4.csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/zeppelin/zeppelin', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - name: Checkout
      uses: actions/checkout@v4
    - run: touch optcd-3.txt
    - name: Tune Runner VM
      uses: ./.github/actions/tune-runner-vm
    - run: touch optcd-4.txt
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 11
    - run: touch optcd-5.txt
    - name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        path: |-
          ~/.m2/repository
          !~/.m2/repository/org/apache/zeppelin/
          ~/.spark-dist
          ~/.cache
        key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
        restore-keys: |-
          ${{ runner.os }}-zeppelin-
    - run: touch optcd-6.txt
    - name: Setup conda environment with python 3.9 and R
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: python_3_with_R
        environment-file: testing/env_python_3_with_R.yml
        python-version: 3.9
        channels: conda-forge,defaults
        channel-priority: true
        auto-activate-base: false
        use-mamba: true
    - run: touch optcd-7.txt
    - name: Make IRkernel available to Jupyter
      run: |-
        R -e "IRkernel::installspec()"
    - run: touch optcd-8.txt
    - name: Install Environment
      run: |-
        ./mvnw clean install -DskipTests -am -pl zeppelin-integration -Pweb-classic -Pintegration -Pspark-scala-2.12 -Pspark-3.4 -Pweb-dist ${MAVEN_ARGS}
    - run: touch optcd-9.txt
    - name: run tests
      run: |-
        xvfb-run --auto-servernum --server-args="-screen 0 1600x1024x16" ./mvnw verify -DfailIfNoTests=false -pl zeppelin-integration -Pweb-classic -Pintegration -Pspark-scala-2.12 -Pspark-3.4 -Pweb-dist -Pusing-source-tree ${MAVEN_ARGS}
    - run: touch optcd-10.txt
    - name: Print zeppelin logs
      run: if [ -d "logs" ]; then cat logs/*; fi
    - run: touch optcd-11.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-test-selenium-with-spark-module-for-spark-3-4
        path: /home/runner/inotifywait-log-test-selenium-with-spark-module-for-spark-3-4.csv
    name: test-selenium-with-spark-module-for-spark-3-4
'on':
- push
- workflow_dispatch
